check()
library(devtools)
packageVersion()
packageVersion("devtools")
library(regexcite)
install.packages("regexcite")
create_package()
getwd()
create_package(getwd())
library(mlr3verse)
library(mlr3proba)
?partition
library(mlr3)
library(mlr3proba)
library(mlr3verse)
library(mlr3tuningspaces)
library(reticulate)
library(survivalmodels)
library(dplyr)
library(survival)
library(survminer)
library(plyr)
library(edgeR)
library(DESeq2)
library(foreach)
library(data.table)
library(future)
library(future.apply)
library(caret)
library(RSBID)
library(dplyr)
library(MASS)
library(ROCR)
library(limma)
library(prioritylasso)
library(ipflasso)
?prioritylasso
?ipflasso
??ipflasso
library(installr)
updateR()
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("MLSeq")
getwd()
print("Available preprocessing methods are: \"deseq\" and \"voom\".")
?cat
cat("Available preprocessing methods are: \"deseq\" and \"voom\".")
cat("Preprocess method not specified. Using the original data without any preprocessing")
library(IPO)
install.packages("IPO")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("IPO")
library(IPO)
BiocManager::install("mzR")
install.packages("Rcpp")
install.packages("Rcpp")
library(IPO)
BiocManager::install("xcms")
library(xcms)
peakpickingParameters <- getDefaultXcmsSetStartingParams(‘centWave’)
peakPickingParameters <- getDefaultXcmsSetStartingParams("centWave")
peakPickingParameters
resultPeakpickingbestsettingsresult optimizedXcmsSetObject <- resultPeakpickingbestsettingsxset
getwd()
fred <- function(x) UseMethod("fred")
fred(1:4)
fred.default <- function(x) {
cat("in fred.default\n")
invisible(NULL)
}
fred(1:4)
methods(summary)
summary
fix(summary)
summary.data.frame
else if (method == "cforest"){
library(mlr3)
library(mlr3proba)
?TaskSurv$new
?TaskSurv
library(mlr3)
??measures
library(devtools)
check()
library(mlr3)
?train
